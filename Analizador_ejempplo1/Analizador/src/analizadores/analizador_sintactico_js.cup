/*--------------- 1ra Area: Codigo de Usuario -----------------------*/
//-------> importaciones, paquetes
package analizadores;
import java_cup.runtime.Symbol;


//------> Codigo para el parser,variables, metodos
parser code{:

        //Podemos crear variables, listas, etc;
        // deben de ser staticas si se quieren usar fuera
        
        
        

        public void syntax_error(Symbol s)
        {
            System.err.println("Error en la Linea " + (s.right+1) +" Columna "+(s.left+1)+ ". Identificador "+s.value + " no reconocido. Se ha recuperado del error." );
        }

        public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception
        {
            System.err.println("Error en la Linea " + (s.right+1)+ " Columna "+(s.left+1)+". Identificador " +s.value + " no reconocido.");
        }
        
:}

//------> Codigo para las acciones gramaticales
action code
{:  :}

/*--------------- 2da Area: Declaraciones -----------------------*/

//------> declaracion de terminales 

terminal String mas, deci,coma, por,id, div, str, menos,dosp,pyc, cora, keis, bre, defi, corc, digito, cadena,  para, parc, igual, llavea, llavec,clase,vare,lete,conste,ife,elsi,fory,whi,du,swi,consi,req,iguall,dif,menor,menig,mayor,mayig,and,or,not, pote,modu;
 

//------> declaracion de no terminales
non terminal INICIO,  INSTRUCCIONES, INSTRUCCION;
non terminal CLASS;
non terminal VAR;
non terminal LET;
non terminal CONST;
non terminal IF;
non terminal ELSE;
non terminal FOR;
non terminal WHILE;
non terminal DO;
non terminal SWITCH;
non terminal BREAK;
non terminal REQUIRE;
non terminal DECLARACION, DECLARACIONES;
non terminal OPERACIONES, OPERACION;
non terminal COMPARACIONES;
non terminal O;
non terminal FUNCION;
non terminal METODOS;
non terminal FORMETOD;
non terminal VARIAS;
non terminal C;
non terminal IFMETOD;





//------> precedencia
precedence left mas, menos;
precedence left por, div;



start with INICIO;

/*--------------- 3ra Area: Reglas Semanticas -----------------------*/

INICIO::= clase id llavea INSTRUCCIONES llavec:a    {::} 
       ;
INSTRUCCIONES::= INSTRUCCIONES:a INSTRUCCION:b    {::}
       | INSTRUCCION:a                            {::}
       
       | INSTRUCCIONES:a FUNCION:b            {::}
       | FUNCION:a                           {::}
       | INSTRUCCIONES:a METODOS:b          {::}    
       | METODOS:a                           {::};
                   

FUNCION::= id para id parc llavea C llavec {::};

INSTRUCCION::= id pyc {::};
            
DECLARACIONES::= DECLARACIONES DECLARACION
                |DECLARACION;
O::= deci {::}
    |cadena {::}
    |digito{::};

VARIAS::= VARIAS C
        |C;
C::= vare id igual O pyc {::}
    | lete id igual O pyc {::}
    | conste id igual O pyc {::};

METODOS::= FORMETOD {::}
        |IFMETOD {::};

FORMETOD::= fory para parc llavea llavec {::};
            
IFMETOD::= ife para parc llavea llavec {::};

           
            




